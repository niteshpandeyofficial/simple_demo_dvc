stages:
  load_data: 
    cmd: python src/load_data.py --config=params.yaml
    deps:
    - src/get_data.py
    - src/load_data.py
    - data_given/winequality.csv

    outs:
    - data/raw/winequality.csv

  split_data:
    cmd: python src/split_data.py --config=params.yaml
    deps:
    - src/split_data.py
    - data/raw/winequality.csv

    outs:
    - data/processed/train_winequality.csv
    - data/processed/test_winequality.csv


  train_and_evaluate:
    cmd: python src/train_and_evaluate.py --config=params.yaml
    deps:
    - data/processed/train_winequality.csv
    - data/processed/test_winequality.csv
    - src/train_and_evaluate.py

    params:
    - estimator.ElasticNet.params.alphas
    - estimator.ElasticNet.params.l1_ratio

    # metrics:
    # - report/scores.json:
    #     cache: false
    # - report/param.json:
    #     cache: false

    # outs:
    # - saved_models/model.joblib

    # log_production_model:
    # cmd: python src/train_and_evaluate.py --config=params.yaml 
    # deps:
    # -src/lpg_production_model.py
